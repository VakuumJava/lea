[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "mcp-ui-aggregator"
version = "0.1.0"
description = "MCP UI Aggregator - A Model Context Protocol server for UI component management"
authors = [
    {name = "MCP UI Aggregator Team", email = "team@mcp-ui-aggregator.dev"},
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = ["mcp", "ui", "components", "aggregator", "fastapi"]

dependencies = [
    "fastapi>=0.104.0",
    "mcp>=1.0.0",
    "sqlalchemy>=2.0.0",
    "aiosqlite>=0.19.0",
    "uvicorn[standard]>=0.24.0",
    "httpx>=0.25.0",
    "aiohttp>=3.9.0",
    "beautifulsoup4>=4.12.0",
    "lxml>=4.9.0",
    "click>=8.1.0",
    "python-multipart>=0.0.6",
    "jinja2>=3.1.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.0.0",
    "alembic>=1.12.0",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
    "httpx>=0.25.0",
]
vector = [
    "sentence-transformers>=2.2.0",
    "chromadb>=0.4.0",
    "numpy>=1.24.0",
]

[project.scripts]
mcp-ui-aggregator = "mcp_ui_aggregator.cli:main"

[project.urls]
Homepage = "https://github.com/beka4kaa/lea"
Repository = "https://github.com/beka4kaa/lea"
Issues = "https://github.com/beka4kaa/lea/issues"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["mcp_ui_aggregator"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["mcp_ui_aggregator"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]